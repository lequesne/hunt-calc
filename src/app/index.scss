//imports
@import '../assets/icons/output/HuntleeIcons';

/**
 *  If you want to override some bootstrap variables, you have to change values here.
 *  The list of variables are listed here bower_components/bootstrap-sass/assets/stylesheets/bootstrap/_variables.scss
 */

//booststrap vars
$navbar-inverse-link-color: #5AADBB;
$icon-font-path: "../../../huntlee-calculator/sbower_components/bootstrap-sass/assets/fonts/bootstrap/";
//global vars
$imgPath: '../assets/images/';
$ipadProWidth: 1366px;
$ipadProHeight: 1024px;
$border-radius: 7px;
$border-radius-sm: 4px;
//colors
$default_copy_color: #666666;
$huntlee_teal: #32947E;
$huntlee_teal_light: #62acb6;
$success_green: #9ec847;
$error_red: #db5240;
$inset_bg_light: #eeead3;
//fonts
$default_font: "ChevinStd-Light";
$light_font: "ChevinStd-Thin";
$med_font: "ChevinStd-Medium";
//easing vars
$linear         : "0.250, 0.250, 0.750, 0.750" !default;
$ease           : "0.250, 0.100, 0.250, 1.000" !default;
$ease-in        : "0.420, 0.000, 1.000, 1.000" !default;
$ease-out       : "0.000, 0.000, 0.580, 1.000" !default;
$ease-in-out    : "0.420, 0.000, 0.580, 1.000" !default;

$easeInQuad     : "0.550, 0.085, 0.680, 0.530" !default;
$easeInCubic    : "0.550, 0.055, 0.675, 0.190" !default;
$easeInQuart    : "0.895, 0.030, 0.685, 0.220" !default;
$easeInQuint    : "0.755, 0.050, 0.855, 0.060" !default;
$easeInSine     : "0.470, 0.000, 0.745, 0.715" !default;
$easeInExpo     : "0.950, 0.050, 0.795, 0.035" !default;
$easeInCirc     : "0.600, 0.040, 0.980, 0.335" !default;
$easeInBack     : "0.600, -0.280, 0.735, 0.045" !default;

$easeOutQuad    :  "0.250, 0.460, 0.450, 0.940" !default;
$easeOutCubic   :  "0.215, 0.610, 0.355, 1.000" !default;
$easeOutQuart   :  "0.165, 0.840, 0.440, 1.000" !default;
$easeOutQuint   :  "0.230, 1.000, 0.320, 1.000" !default;
$easeOutSine    :  "0.390, 0.575, 0.565, 1.000" !default;
$easeOutExpo    :  "0.190, 1.000, 0.220, 1.000" !default;
$easeOutCirc    :  "0.075, 0.820, 0.165, 1.000" !default;
$easeOutBack    :  "0.175, 0.885, 0.320, 1.275" !default;

$easeInOutQuad  :  "0.455, 0.030, 0.515, 0.955" !default;
$easeInOutCubic :  "0.645, 0.045, 0.355, 1.000" !default;
$easeInOutQuart :  "0.770, 0.000, 0.175, 1.000" !default;
$easeInOutQuint :  "0.860, 0.000, 0.070, 1.000" !default;
$easeInOutSine  :  "0.445, 0.050, 0.550, 0.950" !default;
$easeInOutExpo  :  "1.000, 0.000, 0.000, 1.000" !default;
$easeInOutCirc  :  "0.785, 0.135, 0.150, 0.860" !default;
$easeInOutBack  :  "0.680, -0.550, 0.265, 1.550" !default;
//mixins
@mixin aspect-ratio($width, $height) {
    position: relative;
    &:before {
        display: block;
        content: "";
        width: 100%;
        padding-top: ($height / $width) * 100%;
    }
    > .content {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }
}
//transition easing
@mixin transition-ease( $curve ) {
    transition-timing-function: cubic-bezier( #{$curve} );
}
//css triangles (sourced from bourbon)
@mixin triangle($size, $color, $direction) {
  $width: nth($size, 1);
  $height: nth($size, length($size));
  $foreground-color: nth($color, 1);
  $background-color: if(length($color) == 2, nth($color, 2), transparent);
  height: 0;
  width: 0;

  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {
    $width: $width / 2;
    $height: if(length($size) > 1, $height, $height/2);

    @if $direction == up {
      border-bottom: $height solid $foreground-color;
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
    } @else if $direction == right {
      border-bottom: $width solid $background-color;
      border-left: $height solid $foreground-color;
      border-top: $width solid $background-color;
    } @else if $direction == down {
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
      border-top: $height solid $foreground-color;
    } @else if $direction == left {
      border-bottom: $width solid $background-color;
      border-right: $height solid $foreground-color;
      border-top: $width solid $background-color;
    }
  } @else if ($direction == up-right) or ($direction == up-left) {
    border-top: $height solid $foreground-color;

    @if $direction == up-right {
      border-left:  $width solid $background-color;
    } @else if $direction == up-left {
      border-right: $width solid $background-color;
    }
  } @else if ($direction == down-right) or ($direction == down-left) {
    border-bottom: $height solid $foreground-color;

    @if $direction == down-right {
      border-left:  $width solid $background-color;
    } @else if $direction == down-left {
      border-right: $width solid $background-color;
    }
  } @else if ($direction == inset-up) {
    border-color: $background-color $background-color $foreground-color;
    border-style: solid;
    border-width: $height $width;
  } @else if ($direction == inset-down) {
    border-color: $foreground-color $background-color $background-color;
    border-style: solid;
    border-width: $height $width;
  } @else if ($direction == inset-right) {
    border-color: $background-color $background-color $background-color $foreground-color;
    border-style: solid;
    border-width: $width $height;
  } @else if ($direction == inset-left) {
    border-color: $background-color $foreground-color $background-color $background-color;
    border-style: solid;
    border-width: $width $height;
  }
}
//gradient mixin
@mixin linearGradient($top, $bottom){
    background: $top; /* Old browsers */
    background: -moz-linear-gradient(top,  $top 0%, $bottom 100%); /* FF3.6+ */
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom)); /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(top,  $top 0%,$bottom 100%); /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(top,  $top 0%,$bottom 100%); /* Opera 11.10+ */
    background: -ms-linear-gradient(top,  $top 0%,$bottom 100%); /* IE10+ */
    background: linear-gradient(to bottom,  $top 0%,$bottom 100%); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
}


/**
 *  Do not remove the comments below. It's the markers used by wiredep to inject
 *  sass dependencies when defined in the bower.json of your dependencies
 */

// bower:scss
// endbower

/**
 *  Do not remove the comments below. It's the markers used by gulp-inject to inject
 *  all your sass files automatically
 */

// injector
// endinjector
